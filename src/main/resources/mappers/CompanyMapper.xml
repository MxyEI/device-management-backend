<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hik.dao.CompanyMapper">
  <resultMap id="BaseResultMap" type="com.hik.entity.Company">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="world" jdbcType="VARCHAR" property="world" />
    <result column="scale" jdbcType="VARCHAR" property="scale" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="success" jdbcType="BIT" property="success" />
    <result column="gmtCreate" jdbcType="VARCHAR" property="gmtCreate" />
    <result column="gmtModify" jdbcType="VARCHAR" property="gmtModify" />
    <result column="dr" jdbcType="BIT" property="dr" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hik.entity.Company">
    <result column="about" jdbcType="LONGVARCHAR" property="about" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, world, scale, address,success, gmtCreate, gmtModify, dr
  </sql>
  <sql id="Blob_Column_List">
    about
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from company
    where id = #{id,jdbcType=INTEGER}
  </select>


  <!-- 新注册的企业待审核的数量 -->
  <select id="getAllComInfoWithNewAddCounts" parameterType="Map" resultType="Long">
    select  count(*)
    from company com
    <where>
      <if test="name != null and name!=''">
        and com.name like #{name}
      </if>

      <if test="address != null and address!=''">
        and com.address like #{address}
      </if>

    </where>
  </select>

  <!-- 新注册的实习单位待审核的信息 -->
  <select id="getAllComInfoWithNewAdd" parameterType="Map" resultMap="BaseResultMap">
    select *
    from company com
    <where>
      <if test="name != null and name!=''">
        and com.name like #{name}
      </if>

      <if test="address != null and address!=''">
        and com.address like #{address}
      </if>

    </where>
    <if test="sort!=null and sort!='' and order!=null and order!=''">
      order by ${sort} ${order}
    </if>
    <if test="start!=null and size!=null">
      limit #{start},#{size}
    </if>
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from company
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hik.entity.Company" useGeneratedKeys="true" keyProperty="id">
    insert into company (id, name, world, 
      scale, address, gmtCreate,
      gmtModify, dr, about,success
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{world,jdbcType=VARCHAR}, 
      #{scale,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=VARCHAR}, 
      #{gmtModify,jdbcType=VARCHAR}, #{dr,jdbcType=BIT}, #{about,jdbcType=LONGVARCHAR},#{success,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hik.entity.Company">
    insert into company
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="world != null">
        world,
      </if>
      <if test="scale != null">
        scale,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="gmtCreate != null">
        gmtCreate,
      </if>
      <if test="gmtModify != null">
        gmtModify,
      </if>
      <if test="dr != null">
        dr,
      </if>
      <if test="about != null">
        about,
      </if>
      <if test="success != null">
        success,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="world != null">
        #{world,jdbcType=VARCHAR},
      </if>
      <if test="scale != null">
        #{scale,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=VARCHAR},
      </if>
      <if test="gmtModify != null">
        #{gmtModify,jdbcType=VARCHAR},
      </if>
      <if test="dr != null">
        #{dr,jdbcType=BIT},
      </if>
      <if test="about != null">
        #{about,jdbcType=LONGVARCHAR},
      </if>
      <if test="success != null">
        #{success,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hik.entity.Company">
    update company
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="world != null">
        world = #{world,jdbcType=VARCHAR},
      </if>
      <if test="scale != null">
        scale = #{scale,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmtCreate = #{gmtCreate,jdbcType=VARCHAR},
      </if>
      <if test="gmtModify != null">
        gmtModify = #{gmtModify,jdbcType=VARCHAR},
      </if>
      <if test="dr != null">
        dr = #{dr,jdbcType=BIT},
      </if>
      <if test="about != null">
        about = #{about,jdbcType=LONGVARCHAR},
      </if>
      <if test="success != null">
        success = #{success,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hik.entity.Company">
    update company
    set name = #{name,jdbcType=VARCHAR},
      world = #{world,jdbcType=VARCHAR},
      scale = #{scale,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      gmtCreate = #{gmtCreate,jdbcType=VARCHAR},
      gmtModify = #{gmtModify,jdbcType=VARCHAR},
      dr = #{dr,jdbcType=BIT},
      about = #{about,jdbcType=LONGVARCHAR},
      success = #{success,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hik.entity.Company">
    update company
    set name = #{name,jdbcType=VARCHAR},
      world = #{world,jdbcType=VARCHAR},
      scale = #{scale,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      gmtCreate = #{gmtCreate,jdbcType=VARCHAR},
      gmtModify = #{gmtModify,jdbcType=VARCHAR},
      dr = #{dr,jdbcType=BIT},
      success = #{success,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>